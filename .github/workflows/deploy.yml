name: Deploy to Minikube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      
    - name: Build application
      run: npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Setup Minikube
      uses: medyagh/setup-minikube@master
      
    - name: Deploy to Minikube
      run: |
        # Start Minikube
        minikube start --driver=docker
        
        # Enable ingress
        minikube addons enable ingress
        
        # Load the image
        minikube image load ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/deployment.yaml
        
        # Wait for deployment
        kubectl wait --for=condition=available --timeout=300s deployment/ng-jenkins-demo -n ng-jenkins-demo
        
        # Get Minikube IP
        MINIKUBE_IP=$(minikube ip)
        echo "Application deployed at: http://$MINIKUBE_IP:30080"
        
    - name: Health Check
      run: |
        # Wait for service to be ready
        sleep 30
        
        # Get Minikube IP
        MINIKUBE_IP=$(minikube ip)
        
        # Check health endpoint
        curl -f "http://$MINIKUBE_IP:30080/health" || exit 1
        
        echo "Health check passed!"
        
    - name: Show deployment status
      run: |
        kubectl get all -n ng-jenkins-demo
        echo ""
        echo "Deployment completed successfully!"
        echo "Access your application at: http://$(minikube ip):30080"
